plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.jvm' version "1.3.70"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.70"
    id 'maven-publish'
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    implementation 'io.vertx:vertx-lang-kotlin:3.8.5'
    implementation 'io.vertx:vertx-pg-client:3.8.5'
    implementation 'io.vertx:vertx-lang-kotlin-coroutines:3.8.5'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

group 'io.floodplain'
version '0.3'

compileJava {
    options.compilerArgs << '-parameters'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += '-Xallow-result-return-type'
        jvmTarget = '1.8'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.inject.Singleton")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}
